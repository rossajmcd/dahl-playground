(ns breakfast.api
  (:require [dahl :as d]
            [protean.api.transformation.sim :as sim]))

(def entrypoint "api/breakfast")

(def apis ["http://localhost:3000/api/drinkmachine"
           "http://localhost:3000/api/toastermachine"])

{
  "api" {
    "breakfast" {
      :get #(let [{:keys [status results]} (d/proxy-get entrypoint apis)]
              (sim/response % status results))
    }
    "breakfast/${resource}/${uuid}" {
      :post #(let [{:keys [status results]} (d/proxy-post entrypoint apis (sim/path-param % "resource") (sim/path-param % "uuid") (sim/body-clj % true))]
              (sim/response % status results))

    }
  }
}
