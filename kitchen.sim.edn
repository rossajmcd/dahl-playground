(ns kitchen.api
  (:require [protean.api.transformation.sim :refer :all]))

(def node-atom (atom :Ready))

(def edge-atom (atom :make-tea))

(def graph
  {:Ready {:make-tea :MakingTea
           :make-coffee :MakingCoffee}
   :MakingTea {:get-status :GettingTeaStatus?}
   :MakingCoffee {:get-status :GettingCoffeeStatus?}
   :GettingTeaStatus? {:making-tea :MakingTea
                       :completing-tea :MadeTea
                       :erroring-tea :ErroredTea}
   :GettingCoffeeStatus? {:making-coffee :MakingCoffee
                          :completing-coffee :MadeCoffee
                          :erroring-coffee :ErroredCoffe}})

(defn next-node
  [graph node edge]
  (when-let [new-state (get-in graph [node (keyword edge)])]
    (reset! node-atom new-state)
    new-state))

; if node ends with ? then no link required

{
  "api" {
    "entrypoint" {
      :get #(respond % 200 (keys (@node-atom graph)))
    }
    "${uuid}" {
      :post #(if-let [n (next-node graph @node-atom (body-param % "edge"))]
               (respond % 200 (keys (n graph)))
               (respond % 400 (keys (@node-atom graph))))
    }
  }
}
